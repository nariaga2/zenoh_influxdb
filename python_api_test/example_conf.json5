{
  /// mode: router, peer and client
  mode: "peer",
  metadata: {
    name: "Python Sensor",
    location: "Lab",
  },
  connect: {
    /// timeout waiting for all endpoints connected (0: no retry, -1: infinite timeout)
    /// Accepts a single value (e.g. timeout_ms: 0)
    /// or different values for router, peer and client (e.g. timeout_ms: { router: -1, peer: -1, client: 0 }).
    timeout_ms: { router: -1, peer: -1, client: 0 },
    endpoints: [
      "tcp/127.0.0.1:7449"
    ],
    /// exit from application, if timeout exceed
    exit_on_failure: { router: false, peer: false, client: true },
    /// connect establishing retry configuration
    retry: {
      /// initial wait timeout until next connect try
      period_init_ms: 1000,
      /// maximum wait timeout until next connect try
      period_max_ms: 40000,
      /// increase factor for the next timeout until nexti connect try
      period_increase_factor: 1,
    }
  },
  listen: {
    /// timeout waiting for all listen endpoints (0: no retry, -1: infinite timeout)
    /// Accepts a single value (e.g. timeout_ms: 0)
    /// or different values for router, peer and client (e.g. timeout_ms: { router: -1, peer: -1, client: 0 }).
    timeout_ms: { router: -1, peer: -1, client: 0 },
    endpoints: ["tcp/[::]:7446"],
    /// exit from application, if timeout exceed
    exit_on_failure: { router: false, peer: false, client: true },
    /// listen retry configuration
    retry: {
      /// initial wait timeout until next try
      period_init_ms: 1000,
      /// maximum wait timeout until next try
      period_max_ms: 40000,
      /// increase factor for the next timeout until next try
      period_increase_factor: 1,
    }
  }
}